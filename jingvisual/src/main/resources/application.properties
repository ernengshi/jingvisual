#是否启用spring默认的icon
spring.mvc.favicon.enabled = false

#在application.properties中可以配置thymeleaf模板解析器属性.就像使用springMVC的JSP解析器配置一样

spring.http.encoding.force=true
spring.http.encoding.charset=UTF-8
spring.http.encoding.enabled=true
server.tomcat.uri-encoding=UTF-8
#thymeleaf start
#spring.thymeleaf.mode 这个mode有6种（2.1版本）：
#
#    XML
#    Valid XML
#    XHTML （默认）
#    Valid XHTML
#    HTML5
#    Legacy HTML5

#除了LEGACYHTML5之外，其他模式都必须是闭合的（标签）
spring.thymeleaf.mode=LEGACYHTML5
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.content-type=text/html
#开发时关闭缓存,不然没法看到实时页面
spring.thymeleaf.cache=false
#thymeleaf end

########################################################

###FREEMARKER (FreeMarkerAutoConfiguration)

########################################################

spring.freemarker.allow-request-override=false

spring.freemarker.cache=true

spring.freemarker.check-template-location=true

spring.freemarker.charset=UTF-8

spring.freemarker.content-type=text/html

spring.freemarker.expose-request-attributes=false

spring.freemarker.expose-session-attributes=false

spring.freemarker.expose-spring-macro-helpers=false

#spring.freemarker.prefix=

#spring.freemarker.request-context-attribute=

#spring.freemarker.settings.*=

#spring.freemarker.suffix=.ftl

#spring.freemarker.template-loader-path=classpath:/templates/ #comma-separated list
#freemarker end

#国际化文件配置
#指定message的basename，多个以逗号分隔，如果不加包名的话，默认从classpath路径开始，默认: messages
spring.messages.basename=i18n/messages
#设定加载的资源文件缓存失效时间，-1的话为永不过期，默认为-1
spring.messages.cache-seconds= 3600
#设定Message bundles的编码，默认: UTF-8
#spring.messages.encoding=UTF-8



#mail
#smtp.qq.com  腾讯邮箱  imap.exmail.qq.com腾讯企业邮箱
spring.mail.host=imap.exmail.qq.com
spring.mail.username=liyong@jingcloud.com
spring.mail.password=Lichunxin19
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true

#properties
com.didispace.blog.name=myblog
com.didispace.blog.title=Spring Boot
#上传文件路径
web.upload-path=D:/temp/upload/
daas.client.token=external_system_token
#properties

#SpringBoot配置RestTemplate的代理和超时时间
#代理设置
proxy.enabled=false
proxy.host=192.168.18.233
proxy.port=8888
#REST超时配置
rest.ReadTimeout=35000
rest.ConnectTimeout=5000
#SpringBoot配置RestTemplate的代理和超时时间

#而当我们需要使用CGLIB来实现AOP的时候，需要配置spring.aop.proxy-target-class=true，不然默认使用的是标准Java的实现。
spring.aop.proxy-target-class=true

#控制端点测试需要 关闭安全认证校验(默认情况下是开启的) 否则 访问/loggers端点的时候，会报错误 ,需要springsecurity依赖
management.security.enabled=false
#management.port=8081

#spring.cache.type来强制指定 cacheManager
#spring.cache.type=redis
spring.cache.type=ehcache

#json date
spring.jackson.date-format=yyyy-MM-dd HH:mm
spring.jackson.time-zone=GMT+8
#mysql data 多配置选择
spring.profiles.active=dev
