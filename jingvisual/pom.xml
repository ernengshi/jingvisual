<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>cn.com.jingcloud</groupId>
    <artifactId>jingvisual</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>jingvisual</name>
    <description>jingcloud visual platform</description>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.5.4.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
<!--                <exclusions>
                    在创建Spring Boot工程时，我们引入了spring-boot-starter，其中包含了spring-boot-starter-logging，该依赖内容就是Spring Boot默认的日志框架Logback，所以我们在引入log4j之前，需要先排除该包的依赖，再引入log4j的依赖
        <exclusion>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-logging</artifactId>
        </exclusion>
    </exclusions>-->
        </dependency>
        <!--log4j日志-->
<!--        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-log4j2</artifactId>
        </dependency>-->


        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <!--spring-boot-starter-web模块-->
        <!--发现spring-boot-starter-thymeleaf下面已经包括了spring-boot-starter-web,所以可以把spring-boot-starter-web的依赖去掉.-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <!--thymeleaf模板-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>
<!--
这个mode有6种（2.1版本）：

    XML
    Valid XML
    XHTML （默认）
    Valid XHTML
    HTML5
    Legacy HTML5

一般常用的是最后两个，第一个没啥好说的，第二个为了兼容之前的代码，便于向Thymeleaf过度。

        官方文档关于这个说明：
        除了Legacy HTML5之外，其他模式都必须是闭合的（标签），也就是说不支持不规范的HTML标签写法 （有人说这个是Thymeleaf的坑，其实人家文档开始就说明了） -->
        <!--配置为Legacy HTML5模式，还需要额外引入一个包用来处理代码-->
        <dependency>
            <groupId>net.sourceforge.nekohtml</groupId>
            <artifactId>nekohtml</artifactId><!-- 版本自己调整，也可不动 -->
        </dependency>


        <!--RESTful API文档Swagger2的依赖-->
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger2</artifactId>
            <version>2.2.2</version>
        </dependency>
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger-ui</artifactId>
            <version>2.2.2</version>
        </dependency>
        <!--RESTful API文档Swagger2的依赖-->

        <!--引入jdbc支持-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jdbc</artifactId>
        </dependency>
        <!--引入jdbc支持-->
        
        <!--使用Atomikos事务管理器-->
<!--        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jta-atomikos</artifactId>
        </dependency>-->
        <!--使用Atomikos事务管理器-->
        
        <!--mysql-->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
        </dependency>
        <!--mysql-->
        <!--json date-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-rest</artifactId>
        </dependency>
        <!--json date-->
        <!--.xml-->
        <dependency>
            <groupId>com.fasterxml.jackson.jaxrs</groupId>
            <artifactId>jackson-jaxrs-xml-provider</artifactId>
        </dependency>
        <!--.xml-->

        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>1.2.39</version>
        </dependency>

        <!--Spring-data-jpa依赖于Hibernate-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <!--Spring-data-jpa依赖于Hibernate-->

        <!--aop-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
        </dependency>
        <!--aop-->
        <!--Spring Boot Actuator监控端点-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <!--Spring Boot Actuator监控端点-->

        <!-- shiro权限控制框架 2017-07-19当前最新 -->
        <dependency>
            <groupId>org.apache.shiro</groupId>
            <artifactId>shiro-spring</artifactId>
            <version>1.3.2</version>
        </dependency>
        <!-- shiro权限控制框架 -->

        <!--springboot thymeleaf和shiro标签整合-->
        <dependency>
            <groupId>com.github.theborakompanioni</groupId>
            <artifactId>thymeleaf-extras-shiro</artifactId>
            <version>1.2.1</version>
        </dependency>
        <!--springboot thymeleaf和shiro标签整合-->

        <!--引入cache依赖-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-cache</artifactId>
        </dependency>
        <!--引入cache依赖-->

        <!--引入redis cache依赖-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-redis</artifactId>
            <!--<version>1.3.8.RELEASE</version>-->
        </dependency>
        <!--引入redis cache依赖-->

        <dependency>
            <groupId>net.sf.ehcache</groupId>
            <artifactId>ehcache</artifactId>
        </dependency>
        <!--JavaMailSender-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-mail</artifactId>
        </dependency>
        <!--JavaMailSender-->

        <!--freemarker-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-freemarker</artifactId>
        </dependency>
        <!--freemarker-->

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.5</version>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.5</version>
        </dependency>
        <!--文件队列-->
        <!--        <dependency>
            <groupId>com.squareup.tape2</groupId>
            <artifactId>tape</artifactId>
            <version>2.0.0</version>
        </dependency>-->

        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>20.0</version>
            <!--<scope>test</scope>-->
            <type>jar</type>
        </dependency>

        <!--<dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi</artifactId>
            <version>3.15</version>
        </dependency>-->
        <!--XSSFWorkbook.java-->
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi-ooxml</artifactId>
            <version>3.14</version>
        </dependency>


        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
        </dependency>


        <!--http://www.webjars.org/-->
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>webjars-locator</artifactId>
        </dependency>
        <!--WebJars是一个很神奇的东西，可以让大家以jar包的形式来使用前端的各种框架、组件。-->

        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>jquery</artifactId>
            <version>2.2.4</version>
        </dependency>

        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>bootstrap</artifactId>
            <version>3.3.6</version>
        </dependency>


        <!--bootstrap tree-->
        <!--        <dependency>
            <groupId>org.webjars.bower</groupId>
            <artifactId>bootstrap-treeview</artifactId>
            <version>1.2.0</version>
        </dependency>-->
        <dependency>
            <groupId>org.webjars.bower</groupId>
            <artifactId>patternfly-bootstrap-treeview</artifactId>
            <version>2.1.1</version>
        </dependency>
        <!--bootstrap tree-->



        <!--bootstrap图表插件-->
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>chartjs</artifactId>
            <version>2.6.0</version>
        </dependency>
        <!--bootstrap图表插件-->
        <!--tree-->
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>zTree</artifactId>
            <version>3.5.28</version>
        </dependency>
        <!--tree-->
        <!--地图插件-->
        <!--        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>echarts</artifactId>
            <version>3.2.3</version>
        </dependency>-->


        <!--地图插件-->
        <!--http://www.webjars.org/-->


        <!--springboot热部署 -->
        <!--optional=true 表示依赖不会传递。devtools只对当前项目启用，而其他依赖该项目的项目，需要时需重新引入。-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <optional>true</optional>
        </dependency>
        <!--springboot热部署-->

        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <scope>test</scope>
            <type>jar</type>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <!--linux-->
                <!--                <configuration>
                    <executable>true</executable>
                </configuration> -->
                <!--http://docs.spring.io/spring-boot/docs/1.4.1.BUILD-SNAPSHOT/maven-plugin/examples/run-debug.html-->
                <!--远程调试命令 Java -Xdebug -Xrunjdwp:server=y,transport=dt_socket,address=9999,suspend=n -jar springboot_demo-0.0.1-SNAPSHOT.jar-->
                <!--本地调试 netbeans 自带本地调试功能所以注释掉-->
                <!--                <configuration>
                    <jvmArguments>
                        -Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8787
                    </jvmArguments>
                </configuration>-->
                <!--maven 插件文档 http://docs.spring.io/spring-boot/docs/current/maven-plugin/start-mojo.html#fork-->
                <configuration>
                    <fork>true</fork> <!-- 如果没有该配置，devtools不会生效 -->
                </configuration>
                <!--<dependencies>
                     spring热部署 通过maven插件spring-boot:run启动 正常情况下使用 devtools
                    <dependency>
                        <groupId>org.springframework</groupId>
                        <artifactId>springloaded</artifactId>
                        <version>1.2.6.RELEASE</version>
                    </dependency>
                </dependencies>-->
            </plugin>
            <!--maven编译的时候排除junit测试类 mvn install -Dmaven.test.skip=true-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                    <!--<skip>false</skip>-->
                </configuration>
            </plugin>
            <!--打包部署 http://www.ityouknow.com/springboot/2017/05/09/springboot-deploy.html-->
            <!--代码混淆插件-->
        </plugins>
    </build>
</project>
